<program> -> 'class' <class_name> '{' <class_body> '}'
<class_name> -> <identifier>
<class_body> -> <class_member> <class_body> | E
<class_member> -> <property_declaration> | <method_declaration>

<property_declaration> -> <opt_scope_modifier> <variable_declaration>
<variable_declaration> -> <data_type> <identifier> <opt_variable_initialization> ';'
<opt_variable_initialization> ->

<method_declaration> -> <opt_scope_modifier> <data_type> <identifier> '(' (<param_list> | E) ') {' <stmt_list> '}'
<stmt_list> -> <stmt> <stmt_list> | <stmt> | E
<param_list> -> <param> ',' <param_list> | <param>
<param> -> <data_type> <identifier>
<stmt> -> <variable_declaration> | <if> | <for> | <assignment> | <expr>
<if> -> 'if (' <expr> ') {' <stmt_list> '}' (<else> | E)
<else> -> '{' <stmt_list> '}'
<for> -> 'for (' (<assignment> | E) ';' (<logical_expr> | E) ';' (<expr> | <assignment> | E)  ') {' <stmt_list> '}'
<assignment> ->
<expr> ->
<logical_expr> ->

<identifier> -> <letter> <alfanumeric_list> | <letter>
<alfanumeric_list> -> (<letter> | <digit>) <alfanumeric_list> | <letter> | <digit>
<opt_scope_modifier> -> //pensar no static
<data_type> ->

<letter> ->
<digit> ->